{"ast":null,"code":"var _s = $RefreshSig$();\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getQuizzD } from '../../actions/userActions';\nimport { useParams } from 'react-router-dom';\nimport Result from '../result/Result';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Instructions = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_c = Instructions;\nconst PlayQuizz = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getQuizzD(id));\n  }, [id]);\n  const [difficultyLevel, setDifficultyLevel] = useState(2);\n  const [score, setScore] = useState(0);\n  const [ans, setAns] = useState([]);\n  const [checked, setChecked] = useState([]);\n  const {\n    quizzDetails\n  } = useSelector(state => state.appInfo);\n  // const next=async(event)=>{\n  //   event.preventDefault()\n  //   if (Right(correctAns,ans) && quizzDetails.quizz.questions[difficultyLevel-1].difficulty===10 ) {\n\n  //   }\n  //   if (!Right(correctAns,ans) && quizzDetails.quizz.questions[difficultyLevel-1].difficulty===1 ) {\n\n  //   }\n  //   if (Right(correctAns,ans)) {\n  //     setDifficultyLevel(difficultyLevel+1)\n  //     setScore(score+5)\n  //   }\n  //   else {\n  //     setDifficultyLevel(difficultyLevel-1)\n  //     setScore(score-2)\n  //   }\n\n  // }\n  // function handleAns(event){\n  //   var updatedList = [...checked];\n  //   if (event.target.checked) {\n  //   updatedList = [...checked, event.target.value];\n  // } else {\n  //   updatedList.splice(checked.indexOf(event.target.value), 1);\n  // }\n  // setChecked(updatedList);\n  // }\n\n  // const q=quizzDetails.quizz.questions[difficultyLevel-1]\n  // const correctAns=quizzDetails.quizz.questions[difficultyLevel-1].ans\n  // function Right(correctAns,ans){\n  //   for (let index = 0; index < correctAns.length; index++) {\n  //     if (Number(correctAns[index])==ans[index]){\n  //       return true;\n  //     }\n  //     else {\n  //       return false;\n  //     }\n\n  //   }\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(PlayQuizz, \"FyBQrZn8Sr9d7Xp9f/P4g8LUu6A=\", false, function () {\n  return [useParams, useDispatch, useSelector];\n});\n_c2 = PlayQuizz;\nexport default PlayQuizz;\nvar _c, _c2;\n$RefreshReg$(_c, \"Instructions\");\n$RefreshReg$(_c2, \"PlayQuizz\");","map":{"version":3,"names":["React","Link","useState","useEffect","useSelector","useDispatch","getQuizzD","useParams","Result","Instructions","PlayQuizz","id","dispatch","difficultyLevel","setDifficultyLevel","score","setScore","ans","setAns","checked","setChecked","quizzDetails","state","appInfo"],"sources":["D:/mern quizz/frontend/src/pages/playQuizz/PlayQuizz.jsx"],"sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useState,useEffect } from 'react'\r\nimport { useSelector,useDispatch } from 'react-redux'\r\nimport { getQuizzD } from '../../actions/userActions'\r\nimport { useParams } from 'react-router-dom'\r\nimport Result from '../result/Result'\r\n\r\nconst Instructions= () =>{\r\n    return (\r\n        <>\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nconst PlayQuizz = () => {\r\n  const {id}=useParams()\r\n  const dispatch=useDispatch()\r\n  useEffect(() => {\r\n    dispatch(getQuizzD(id))\r\n  }, [id])\r\n  const [difficultyLevel,setDifficultyLevel] = useState(2)\r\n  const [score,setScore] = useState(0)\r\n  const [ans,setAns]=useState([])\r\n  const [checked, setChecked] = useState([]);\r\n  const { quizzDetails } = useSelector(\r\n    (state) => state.appInfo\r\n  );\r\n  // const next=async(event)=>{\r\n  //   event.preventDefault()\r\n  //   if (Right(correctAns,ans) && quizzDetails.quizz.questions[difficultyLevel-1].difficulty===10 ) {\r\n\r\n  //   }\r\n  //   if (!Right(correctAns,ans) && quizzDetails.quizz.questions[difficultyLevel-1].difficulty===1 ) {\r\n      \r\n  //   }\r\n  //   if (Right(correctAns,ans)) {\r\n  //     setDifficultyLevel(difficultyLevel+1)\r\n  //     setScore(score+5)\r\n  //   }\r\n  //   else {\r\n  //     setDifficultyLevel(difficultyLevel-1)\r\n  //     setScore(score-2)\r\n  //   }\r\n    \r\n  // }\r\n  // function handleAns(event){\r\n  //   var updatedList = [...checked];\r\n  //   if (event.target.checked) {\r\n  //   updatedList = [...checked, event.target.value];\r\n  // } else {\r\n  //   updatedList.splice(checked.indexOf(event.target.value), 1);\r\n  // }\r\n  // setChecked(updatedList);\r\n  // }\r\n  \r\n  // const q=quizzDetails.quizz.questions[difficultyLevel-1]\r\n  // const correctAns=quizzDetails.quizz.questions[difficultyLevel-1].ans\r\n  // function Right(correctAns,ans){\r\n  //   for (let index = 0; index < correctAns.length; index++) {\r\n  //     if (Number(correctAns[index])==ans[index]){\r\n  //       return true;\r\n  //     }\r\n  //     else {\r\n  //       return false;\r\n  //     }\r\n      \r\n  //   }\r\n  // }\r\n  \r\n  return (\r\n    <>\r\n    {/* <div className=\"container my-4\">\r\n        <div className=\"question\">\r\n            <h4>Q. {q.question} ?</h4>\r\n            <b>Difficulty level : {difficultyLevel+1}</b>\r\n        </div>\r\n       \r\n\r\n  <div class=\"form-check\">\r\n  <input class=\"form-check-input\" type=\"checkbox\" value={q.options[0]}  id=\"A\" name=\"A\" checked={ans.A} onChange={handleAns}/>\r\n  <label class=\"form-check-label\" for=\"A\">\r\n    {q.options[0]}\r\n  </label>\r\n</div>\r\n<div class=\"form-check my-2\">\r\n  <input class=\"form-check-input\" type=\"checkbox\" value={q.options[1]} id=\"B\" name=\"B\" checked={ans.B} onChange={handleAns}/>\r\n  <label class=\"form-check-label\" for=\"B\">\r\n  {q.options[1]}\r\n  </label>\r\n</div>\r\n<div class=\"form-check my-2\">\r\n  <input class=\"form-check-input\" type=\"checkbox\" value={q.options[2]} id=\"C\" name=\"C\" checked={ans.C} onChange={handleAns}/>\r\n  <label class=\"form-check-label\" for=\"C\">\r\n  {q.options[2]}\r\n  </label>\r\n</div>\r\n<div class=\"form-check my-2\">\r\n  <input class=\"form-check-input\" type=\"checkbox\" value={q.options[3]} id=\"D\" name=\"D\" checked={ans.D} onChange={handleAns}/>\r\n  <label class=\"form-check-label\" for=\"D\">\r\n  {q.options[3]}\r\n  </label>\r\n</div>\r\n\r\n        <button class=\" btn btn-sm btn-danger\" type=\"submit\" onClick={next} >Next</button>\r\n    </div> */}\r\n    {/* <Result /> */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PlayQuizz"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,QAAQ,EAACC,SAAS,QAAQ,OAAO;AAC1C,SAASC,WAAW,EAACC,WAAW,QAAQ,aAAa;AACrD,SAASC,SAAS,QAAQ,2BAA2B;AACrD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,MAAM,MAAM,kBAAkB;AAAA;AAAA;AAErC,MAAMC,YAAY,GAAE,MAAK;EACrB,oBACI,qCAEG;AAEX,CAAC;AAAA,KANKA,YAAY;AAQlB,MAAMC,SAAS,GAAG,MAAM;EAAA;EACtB,MAAM;IAACC;EAAE,CAAC,GAACJ,SAAS,EAAE;EACtB,MAAMK,QAAQ,GAACP,WAAW,EAAE;EAC5BF,SAAS,CAAC,MAAM;IACdS,QAAQ,CAACN,SAAS,CAACK,EAAE,CAAC,CAAC;EACzB,CAAC,EAAE,CAACA,EAAE,CAAC,CAAC;EACR,MAAM,CAACE,eAAe,EAACC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACxD,MAAM,CAACa,KAAK,EAACC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACpC,MAAM,CAACe,GAAG,EAACC,MAAM,CAAC,GAAChB,QAAQ,CAAC,EAAE,CAAC;EAC/B,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM;IAAEmB;EAAa,CAAC,GAAGjB,WAAW,CACjCkB,KAAK,IAAKA,KAAK,CAACC,OAAO,CACzB;EACD;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA,oBACE,qCAoCG;AAEP,CAAC;AAAA,GA9FKb,SAAS;EAAA,QACFH,SAAS,EACLF,WAAW,EAQDD,WAAW;AAAA;AAAA,MAVhCM,SAAS;AAgGf,eAAeA,SAAS;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module"}